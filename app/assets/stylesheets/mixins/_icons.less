// Non-sprited icons --------------------------------

.prepend-icon( @icon-image, @width, @height, @nudge-left:0, @nudge-top:0, @pad:10px ) {
  position: relative;
  padding-left: @width + @pad;
  &:before {
    ._generated-icon( @width, @height, @icon-image );
    top: @nudge-top;
    left: @nudge-left;
  }
}

.append-icon( @icon-image, @width, @height, @nudge-right:0, @nudge-top:0, @pad:10px ) {
  position: relative;
  padding-right: @width + @pad;
  .generatedcontent &:after {
    ._generated-icon( @width, @height, @icon-image );
    top: @nudge-top;
    right: @nudge-right;
  }
}

// Sprited icons --------------------------------

.prepend-sprite-icon(@x, @y, @width, @height, @nudge-left:0, @nudge-top:0, @pad:10px, @sprite_image:@sprite_image, @sprite_grid:@sprite_grid) {
  position: relative;
  padding-left: @width + @pad;
  &:before {
    ._generated-sprite-icon( @x, @y, @width, @height, @sprite_image, @sprite_grid );
    top: @nudge-top;
    left: @nudge-left;
  }
}

.append-sprite-icon(@x, @y, @width, @height, @nudge-right:0, @nudge-top:0, @pad:10px, @sprite_image:@sprite_image, @sprite_grid:@sprite_grid) {
  position: relative;
  padding-right: @width + @pad;
  &:after {
    ._generated-sprite-icon( @x, @y, @width, @height, @sprite_image, @sprite_grid );
    top: @nudge-top;
    right: @nudge-right;
  }
}

.prepend-sprite-icon-pos(@x, @y, @nudge-left:0, @nudge-top:0, @sprite_grid:@sprite_grid) {
  &:before {
    .sprite-pos(@x, @y, @sprite_grid);
    .nudge-l(@nudge-left);
    .nudge-t(@nudge-top);
  }
}

.append-sprite-icon-pos(@x, @y, @nudge-right:0, @nudge-top:0, @sprite_grid:@sprite_grid) {
  &:after {
    .sprite-pos(@x, @y, @sprite_grid);
    .nudge-r(@nudge-right);
    .nudge-t(@nudge-top);
  }
}

// ---- Partials -----------------------

.prepend-icon-setup(@width:0, @height:0, @nudge-left:0, @nudge-top:0, @pad:10px) {
  position: relative;
  ._pad-left(@width, @pad);
  &:before {
    position: absolute;
    display: block;
    content: ' ';
    top: 0;
    left: 0;
    ._size(@width, @height);
  }
}

.append-icon-setup(@width:0, @height:0, @nudge-left:0, @nudge-top:0, @pad:10px) {
  position: relative;
  ._pad-right(@width, @pad);
  &:after {
    position: absolute;
    display: block;
    content: ' ';
    top: 0;
    right: 0;
    ._size(@width, @height);
  }
}

.prepend-icon-image(@icon-image, @width:0, @height:0, @nudge-left:0, @nudge-top:0, @pad:10px) {
  ._pad-left(@width, @pad);
  &:before {
    background: url(@icon-image) no-repeat 0 0;
    ._size(@width, @height);
    .nudge-l(@nudge-left);
    .nudge-t(@nudge-top);
  }
}

.append-icon-image(@icon-image, @width:0, @height:0, @nudge-right:0, @nudge-top:0, @pad:10px) {
  ._pad-right(@width, @pad);
  &:after {
    background: url(@icon-image) no-repeat 0 0;
    ._size(@width, @height);
    .nudge-r(@nudge-right);
    .nudge-t(@nudge-top);
  }
}

// ---- internal use mixins -----------------------

._generated-icon(@width, @height, @icon-image) {
  position: absolute;
  display: block;
  content: ' ';
  background: url(@icon-image) no-repeat 0 0;
  .size(@width, @height);
}

._generated-sprite-icon(@x, @y, @width, @height, @sprite_image:@sprite_image, @sprite_grid:@sprite_grid) {
  position: absolute;
  display: block;
  content: ' ';
  .sprite-sized(@x, @y, @width, @height, @sprite_image, @sprite_grid);
}

._pad-left(@width, @pad) when (@width = 0) {
}

._pad-left(@width, @pad) when not (@width = 0) {
  padding-left: @width + @pad;
}

._pad-right(@width, @pad) when (@width = 0) {
}

._pad-right(@width, @pad) when not (@width = 0) {
  padding-right: @width + @pad;
}

._gc-pad-left(@width, @pad) when (@width = 0) {
}

._gc-pad-right(@width, @pad) when (@width = 0) {
}

._gc-pad-left(@width, @pad) when not (@width = 0) {
  ._pad-left(@width, @pad);
}

._gc-pad-right(@width, @pad) when not (@width = 0) {
  ._pad-right(@width, @pad);
}

._size(@width, @height) when (@width = 0) and (@height = 0) {
}

._size(@width, @height) when (@width = 0) and not (@height = 0) {
  height: @height;
}

._size(@width, @height) when not (@width = 0) and (@height = 0) {
  width: @width;
}

._size(@width, @height) when not (@width = 0) and not (@height = 0) {
  width: @width;
  height: @height;
}



