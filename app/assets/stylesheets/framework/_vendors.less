// MIXINS

.box-sizing(@x: @box-sizing) {
	-moz-box-sizing: @x;
	-webkit-box-sizing: @x;
	box-sizing: @x;
}

//

.border-radius(@x: @border-radius) {
	-webkit-border-radius: @x;
	-moz-border-radius: @x;
	border-radius: @x;
}

//

.box-shadow(@x: @box-shadow) {
	-webkit-box-shadow: @x;
	-moz-box-shadow: @x;
	box-shadow: @x;
}

//

.transition(@x: @transition) {
	-webkit-transition: @x;
	-moz-transition: @x;
	transition: @x;
}

//

.filter(@x) {
	-webkit-filter: @x;
	-moz-filter: @x;
	-ms-filter: @x;
	-o-filter: @x;
	filter: @x;
}

.filter-grayscale(@x) {
	.filter(grayscale(@x));
}

.filter-sepia(@x) {
	.filter(sepia(@x));
}

.filter-hue-rotate(@x) {
	.filter(hue-rotate(@x));
}

.filter-saturate(@x) {
	.filter(~"saturate(@{x})");
}

.filter-brightness(@x) {
	.filter(brightness(@x));
}

.filter-opacity(@x) {
	.filter(opacity(@x));
}

.filter-contrast(@x) {
	.filter(contrast(@x));
}

.filter-invert(@x) {
	.filter(invert(@x));
}

.filter-blur(@x) {
	.filter(blur(@x));
}

.filter-drop-shadow(@x) {
	.filter(drop-shadow(@x));
}

.filter-url(@x) {
	.filter(url(@x));
}

//

.transform(@x) {
	-webkit-transform: @x;
	-moz-transform: @x;
	-o-transform: @x;
	-ms-transform: @x;
	transform: @x;
}

.transform-rotate(@x) {
	.transform(rotate(@x));
}

.transform-rotateX(@x) {
	.transform(rotateX(@x));
}

.transform-rotateY(@x) {
	.transform(rotateY(@x));
}

.transform-rotateZ(@x) {
	.transform(rotateZ(@x));
}

.transform-rotate3d(@x) {
	.transform(rotate3d(@x));
}

.transform-scale(@x) {
	.transform(scale(@x));
}

.transform-scaleX(@x) {
	.transform(scaleX(@x));
}

.transform-scaleY(@x) {
	.transform(scaleY(@x));
}

.transform-scaleZ(@x) {
	.transform(scaleZ(@x));
}

.transform-scale3d(@x) {
	.transform(scale3d(@x));
}

.transform-skew(@x) {
	.transform(skew(@x));
}

.transform-skewX(@x) {
	.transform(skewX(@x));
}

.transform-skewY(@x) {
	.transform(skewY(@x));
}

.transform-translate(@x) {
	.transform(translate(@x));
}

.transform-translateX(@x) {
	.transform(translateX(@x));
}

.transform-translateY(@x) {
	.transform(translateY(@x));
}

.transform-translateZ(@x) {
	.transform(translateZ(@x));
}

.transform-translate3d(@x) {
	.transform(translate3d(@x));
}

.transform-matrix(@x) {
	.transform(matrix(@x));
}

.transform-matrix3d(@x) {
	.transform(matrix3d(@x));
}

.transform-perspective(@x) {
	.transform(perspective(@x));
}

//

.transform-origin(@x) {
	-webkit-transform-origin: @x;
	-moz-transform-origin: @x;
	-o-transform-origin: @x;
	-ms-transform-origin: @x;
	transform-origin: @x;
}

//

.user-select(@select) {
	-webkit-user-select: @select;
	-moz-user-select: @select;
	-ms-user-select: @select;
	-o-user-select: @select;
	user-select: @select;
}

.placeholder(@color: #ddd) {
	:-moz-placeholder {
		color: @color;
	}
	::-webkit-input-placeholder {
		color: @color;
	}
}

//

#gradient {
	.horizontal(@start-color, @end-color, @start-percent: 0%, @end-percent: 100%) {
		background-image: -webkit-gradient(linear, @start-percent top, @end-percent top, from(@start-color), to(@end-color));
		background-image: -webkit-linear-gradient(left, color-stop(@start-color @start-percent), color-stop(@end-color @end-percent));
		background-image: -moz-linear-gradient(left, @start-color @start-percent, @end-color @end-percent);
		background-image: linear-gradient(to right, @start-color @start-percent, @end-color @end-percent);
		background-repeat: repeat-x;
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@start-color), argb(@end-color)));
	}

	.vertical(@start-color, @end-color, @start-percent: 0%, @end-percent: 100%) {
		background-image: -webkit-gradient(linear, left @start-percent, left @end-percent, from(@start-color), to(@end-color));
		background-image: -webkit-linear-gradient(top, @start-color @start-percent, @end-color @end-percent);
		background-image: -moz-linear-gradient(top, @start-color @start-percent, @end-color @end-percent);
		background-image: linear-gradient(to bottom, @start-color @start-percent, @end-color @end-percent);
		background-repeat: repeat-x;
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@start-color), argb(@end-color)));
	}

	.directional(@start-color, @end-color, @deg: 45deg) {
		background-repeat: repeat-x;
		background-image: -webkit-linear-gradient(@deg, @start-color, @end-color);
		background-image: -moz-linear-gradient(@deg, @start-color, @end-color);
		background-image: linear-gradient(@deg, @start-color, @end-color);
	}
	.horizontal-three-colors(@start-color, @mid-color, @end-color, @color-stop: 50%) {
		background-image: -webkit-gradient(left, linear, 0 0, 0 100%, from(@start-color), color-stop(@color-stop, @mid-color), to(@end-color));
		background-image: -webkit-linear-gradient(left, @start-color, @mid-color @color-stop, @end-color);
		background-image: -moz-linear-gradient(left, @start-color, @mid-color @color-stop, @end-color);
		background-image: linear-gradient(to right, @start-color, @mid-color @color-stop, @end-color);
		background-repeat: no-repeat;
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@start-color), argb(@end-color)));
	}
	.vertical-three-colors(@start-color, @mid-color, @end-color, @color-stop: 50%) {
		background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@start-color), color-stop(@color-stop, @mid-color), to(@end-color));
		background-image: -webkit-linear-gradient(@start-color, @mid-color @color-stop, @end-color);
		background-image: -moz-linear-gradient(top, @start-color, @mid-color @color-stop, @end-color);
		background-image: linear-gradient(@start-color, @mid-color @color-stop, @end-color);
		background-repeat: no-repeat;
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@start-color), argb(@end-color)));
	}
	.radial(@inner-color, @outer-color) {
		background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@inner-color), to(@outer-color));
		background-image: -webkit-radial-gradient(circle, @inner-color, @outer-color);
		background-image: -moz-radial-gradient(circle, @inner-color, @outer-color);
		background-image: radial-gradient(circle, @inner-color, @outer-color);
		background-repeat: no-repeat;
	}
	.striped(@color, @angle: 45deg) {
		background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, @color), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, @color), color-stop(.75, @color), color-stop(.75, transparent), to(transparent));
		background-image: -webkit-linear-gradient(@angle, @color 25%, transparent 25%, transparent 50%, @color 50%, @color 75%, transparent 75%, transparent);
		background-image: -moz-linear-gradient(@angle, @color 25%, transparent 25%, transparent 50%, @color 50%, @color 75%, transparent 75%, transparent);
		background-image: linear-gradient(@angle, @color 25%, transparent 25%, transparent 50%, @color 50%, @color 75%, transparent 75%, transparent);
	}
}

.reset-filter() {
	filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
}

//

.font-face( @family-name, @font-path, @font-weight:normal, @font-style:normal, @svg:false ) when not (@svg) {
	@font-face {
		font-family: @family-name;
		src: url('@{font-path}.eot');
		src: url('@{font-path}.eot?#iefix') format('embedded-opentype'), url('@{font-path}.woff') format('woff'), url('@{font-path}.ttf') format('truetype');
		font-weight: @font-weight;
		font-style: @font-style;
	}
}

.font-face( @family-name, @font-path, @font-weight:normal, @font-style:normal, @svg:false ) when (@svg) {
	@font-face {
		font-family: @family-name;
		src: url('@{font-path}.eot');
		src: url('@{font-path}.eot?#iefix') format('embedded-opentype'), url('@{font-path}.woff') format('woff'), url('@{font-path}.ttf') format('truetype'), url('@{font-path}.svg#@{family-name}') format('svg');
		font-weight: @font-weight;
		font-style: @font-style;
	}
}

.text-overflow(@x: ellipsis) {
	-ms-text-overflow: @x;
	-o-text-overflow: @x;
	text-overflow: @x;
}