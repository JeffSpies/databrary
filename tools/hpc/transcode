#!/bin/bash

SCRATCH=/scratch/databrary

usage() {
	echo "Usage: $0 [-d OUTDIR] FILE ..."
	echo "Transcodes files to OUTDIR/FILE (transcoded by default)."
	exit 1
}

rate=50000
outdir=transcoded
while getopts 'r:fd:n' opt ; do case "$opt" in
	r) rate=$OPTARG ;;
	f) (( force++ )) ;;
	d) outdir=$OTPARG ;;
	n) optn=1 ;;
esac ; done
shift $[OPTIND-1]

if [[ $# -eq 0 ]] ; then
	usage
fi

home=`dirname $0`
home=${home%/bin}
pbs=$home/transcode.pbs

if [[ ! -f $pbs ]] ; then
	echo "$pbs not found!"
	exit 1
fi

#if [[ $PWD != /scratch/* ]] ; then
#	echo "Should be run from /scratch."
#	exit 1
#fi

cmd=qsub
if [[ $optn ]] ; then
	cmd="echo $cmd"
fi

mkdir -p log
for file in "$@" ; do
	if [[ ! -f $file ]] ; then
		echo "$file: file not found"
		continue
	fi
	if [[ $file = /* ]] ; then
		tdir=$outdir
	else
		tdir=$outdir/`dirname "$file"`
	fi
	base=`basename "$file"`
	base=${base%.*}
	out=$tdir/$base-01.mp4
	if [[ -s $out && $force -lt 1 ]] ; then
		echo "$file: Transcoding already done. Skipping. Use -f to force."
		continue
	fi
	lock=$tdir/.$base.lock
	if [[ -e $lock && $force -lt 2 ]] ; then
		echo "$file: Transcoding already in progress. Skipping. Use -ff to force."
		continue
	fi
	mkdir -p $tdir
	if [[ ! $optn ]] ; then
		touch $lock
	fi
	name=`echo $base | tr -cd '[:alnum:]' | cut -c-15`
	sec=$[60+`stat -c %s $file`/$rate]
	echo -n "$file: "
	$cmd -d $PWD -q ser2 -N $name -v "IN=$file,OUT=$out,LOCK=$lock", -l walltime=$sec $pbs
done
